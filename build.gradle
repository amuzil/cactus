plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id "io.freefair.lombok" version "8.0.1"
    id "org.sonarqube" version "3.5.0.2730"
}

group = "com.amuzil"
version = "1.0.0"
archivesBaseName = "cactus"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: "parchment", version: "2023.03.12-1.19.3"

    // accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run/client")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "cactus"

            mods {
                cactus {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run/server")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "cactus"

            mods {
                cactus {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run/gametest-server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                cactus {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run/data")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"

            args "--mod", "cactus", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")

            mods {
                cactus {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir "src/generated/resources" }

repositories {

}

dependencies {
    minecraft "net.minecraftforge:forge:1.19.3-44.1.23"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Cactus Juice",
                "Specification-Vendor"    : "Mahtaran",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Mahtaran",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy("reobfJar")

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

sonarqube {
    properties {
        property "sonar.projectKey", "amuzil_cactus"
        property "sonar.organization", "amuzil"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
